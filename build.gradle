apply plugin: "java"
apply plugin: "application"
apply plugin: 'project-report'

sourceCompatibility='1.8'
targetCompatibility='1.8'

version='1.0'
project.ext
{
	dropwizardVersion = '0.7.+'
	h2Version         = '1.4+'
	postgresversion   = '9.4+'
	mariadbversion    = '1.1.8'
	jnaversion        = '3.0.9'
}

mainClassName = 'se.solit.timeit.application.TimeITServerApplication'

repositories
{
	mavenCentral()
}

sourceSets
{
	main
	{
		output.resourcesDir = sourceSets.main.output.classesDir
	}
	test
	{
		output.resourcesDir = sourceSets.test.output.classesDir
	}
}


test
{
        testLogging
        {
                // Show that tests are run in the command-line output
                events 'started', 'passed'
                exceptionFormat = 'full'
        }
//      reportsDir = file("$buildDir/junit")
}

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
  	classpath "com.github.jengelman.gradle.plugins:shadow:4.0.4"
  }
}


dependencies
{
	implementation( "io.dropwizard:dropwizard-core:$dropwizardVersion" )
	implementation( "io.dropwizard:dropwizard-auth:$dropwizardVersion" )
	implementation( "io.dropwizard:dropwizard-assets:$dropwizardVersion" )
	implementation( "io.dropwizard:dropwizard-views:$dropwizardVersion" )
	implementation( "io.dropwizard:dropwizard-views-freemarker:$dropwizardVersion" )
	implementation( "io.dropwizard:dropwizard-jackson:$dropwizardVersion" )
	implementation( "io.dropwizard:dropwizard-testing:$dropwizardVersion" )
	implementation( "javax.mail:mail:1.4.7" )
	implementation( "com.sun.jersey:jersey-json:1.18.1" )
	implementation( "com.h2database:h2:$h2Version" )
	implementation( "org.postgresql:postgresql:$postgresversion" )
	//compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: mariadbversion
	//compile group: 'com.sun.jna', name: 'jna', version: jnaversion
	implementation( "org.eclipse.persistence:eclipselink:2.5.1" )
}

apply plugin: "com.github.johnrengelman.shadow"

shadowJar {
    mergeServiceFiles()
	exclude 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.SF'
    baseName = 'TimeIT-Server'
    classifier = 'beta'
    version =  version
}

jar {
	manifest {
		attributes 'Main-Class': mainClassName
	}
}
run
{
	args 'server','./src/main/config/template-config.yml'
}


